{"mappings":"SAASA,qBACPC,gBAAkBC,aAAaC,QAAQ,mBAAqB,QAC5DC,iBAAmBF,aAAaC,QAAQ,qBAAuB,OAE/DE,UAAiD,SAArCH,aAAaC,QAAQ,cAA0B,EAE3D,IAAIG,EAAKJ,aAAaC,QAAQ,YAAc,KACtCI,QAAND,EAAgBE,KAAKC,MAAMC,aAAaJ,IAAmB,GAE3D,IAAIK,EAAQT,aAAaC,QAAQ,WAAa,KACrCS,OAATD,EAAkBD,aAAaC,GAAoB,GAEnDE,cAAgBX,aAAaC,QAAQ,kBAAoB,WAGlDW,kBAAkBC,GACzBA,EAAWC,SAASC,IAClBC,mBAAmBD,EAAQE,UAAWF,eAIjCG,oBAEOC,mBAAmBd,QAAQe,IACjCC,MAAMC,IACCA,cAIRC,qBAAqBC,GAC5B,OAAOC,WAAWC,MAAMC,GAAMA,EAAEC,eAAiBJ,aAG1CK,sBAAsBL,GAC7B,OAAOC,WAAWK,WAAWH,GAAMA,EAAEC,eAAiBJ,aAG/CO,kBACPC,QAAQC,IAAI,oBACZR,WAAWX,SAASC,IACJmB,UAAUnB,EAAQa,cACxBP,MAAK,SAAUc,GACrBC,QAAU9B,KAAKC,MAAM4B,GACrBE,gBAAgBD,eAKtBE,KAAKC,UAAUC,aAAe,SAAUC,GACtC,IAAIC,EAAMC,EAAIC,EAAMC,EAAKC,EAAIC,EAAGC,EAAMC,EAAKC,EAAIC,EAAGC,EAAMC,EAAKC,EAAIC,EAAGC,EAAIC,EAAGC,EAAIC,EAAGC,EAAMC,EAAMC,EAAMC,EA0CpG,OAzCApB,IAAOD,EAAOsB,KAAKC,eAAiB,IAAIC,OAAM,GAC9CpB,GAAMC,EAAIiB,KAAKG,WAAa,GAAK,GAAK,IAAMpB,EAAIA,EAChDF,GAAOD,EAAO,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACAG,EAAI,IAAIqB,UAAU,EAAG,GACvBlB,GAAMC,EAAIa,KAAKK,WAAa,GAAK,IAAMlB,EAAIA,EAC3CF,GAAOD,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/EgB,KAAKM,WACJF,UAAU,EAAG,GAChBL,EAAKZ,GAAK,IAAMA,GAAK,GAAK,KAA0B,IAAlBW,EAAOX,EAAI,IAAW,KAAe,GAARW,EAAY,KAAe,GAARA,EAAY,KAAO,KACrGrB,EAAeA,EACZ8B,QAAQ,SAAU7B,GAClB6B,QAAQ,OAAQ5B,GAChB4B,QAAQ,SAAU3B,GAClB2B,QAAQ,QAAS1B,GACjB0B,QAAQ,OAAQzB,GAChByB,QAAQ,MAAOxB,GACfwB,QAAQ,SAAUvB,GAClBuB,QAAQ,QAAStB,GACjBsB,QAAQ,OAAQrB,GAChBqB,QAAQ,MAAOpB,GACfoB,QAAQ,OAAQR,GAEV,IADTR,EAAIF,EAAMW,KAAKQ,cACHjB,EAAI,IACZA,EAAI,KAAIA,GAAK,IACjBD,EAAKC,EAAI,GAAK,IAAMA,EAAIA,EACxBH,EAAOC,EAAM,GAAK,IAAMA,EAAMA,EAC9BQ,GAAQD,EAAOP,EAAM,GAAK,KAAO,MAAMoB,cACvCjB,GAAMC,EAAIO,KAAKU,cAAgB,GAAK,IAAMjB,EAAIA,EAC9CC,GAAMC,EAAIK,KAAKW,cAAgB,GAAK,IAAMhB,EAAIA,EACvClB,EACJ8B,QAAQ,SAAUnB,GAClBmB,QAAQ,QAASlB,GACjBkB,QAAQ,OAAQjB,GAChBiB,QAAQ,MAAOhB,GACfgB,QAAQ,OAAQf,GAChBe,QAAQ,MAAOd,GACfc,QAAQ,OAAQb,GAChBa,QAAQ,MAAOZ,GACfY,QAAQ,SAAUX,GAClBW,QAAQ,SAAUV","sources":["scripts/generalHelper.js"],"sourcesContent":["function CargarLocalStorage() {\r\n  sColorPrincipal = localStorage.getItem(\"sColorPrimario\") || \"green\";\r\n  sColorSecundario = localStorage.getItem(\"sColorSecundario\") || \"blue\";\r\n\r\n  bLogueado = localStorage.getItem(\"logueado\") === \"true\" || false;\r\n\r\n  var us = localStorage.getItem(\"usuario\") || null;\r\n  us ? (usuario = JSON.parse(Desencriptar(us))) : (usuario = {});\r\n\r\n  var token = localStorage.getItem(\"sToken\") || null;\r\n  token ? (sToken = Desencriptar(token)) : (sToken = \"\");\r\n\r\n  iMaxGuardados = localStorage.getItem(\"iMaxGuardados\") || 5;\r\n}\r\n\r\nfunction GuardarMarcadores(marcadores) {\r\n  marcadores.forEach((element) => {\r\n    PutOpcionesUsuario(element.usuarioId, element);\r\n  });\r\n}\r\n\r\nfunction ObtenerMarcadores() {\r\n  var marcadores;\r\n  var promesa = GetOpcionesUsuario(usuario.id);\r\n  promesa.then((res) => {\r\n    marcadores = res;\r\n  });\r\n}\r\n\r\nfunction ObtenerGuardadoPorId(codigo) {\r\n  return aGuardados.find((e) => e.codigoBaliza === codigo);\r\n}\r\n\r\nfunction ObtenerIndiceGuardado(codigo) {\r\n  return aGuardados.findIndex((e) => e.codigoBaliza === codigo);\r\n}\r\n\r\nfunction ActualizarDatos() {\r\n  console.log(\"Actualizar datos\");\r\n  aGuardados.forEach((element) => {\r\n    var promise = GetTiempo(element.codigoBaliza);\r\n    promise.then(function (data) {\r\n      oTiempo = JSON.parse(data);\r\n      ActualizarCarta(oTiempo);\r\n    });\r\n  });\r\n}\r\n\r\nDate.prototype.customFormat = function (formatString) {\r\n  var YYYY, YY, MMMM, MMM, MM, M, DDDD, DDD, DD, D, hhhh, hhh, hh, h, mm, m, ss, s, ampm, AMPM, dMod, th;\r\n  YY = ((YYYY = this.getFullYear()) + \"\").slice(-2);\r\n  MM = (M = this.getMonth() + 1) < 10 ? \"0\" + M : M;\r\n  MMM = (MMMM = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ][M - 1]).substring(0, 3);\r\n  DD = (D = this.getDate()) < 10 ? \"0\" + D : D;\r\n  DDD = (DDDD = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][\r\n    this.getDay()\r\n  ]).substring(0, 3);\r\n  th = D >= 10 && D <= 20 ? \"th\" : (dMod = D % 10) == 1 ? \"st\" : dMod == 2 ? \"nd\" : dMod == 3 ? \"rd\" : \"th\";\r\n  formatString = formatString\r\n    .replace(\"#YYYY#\", YYYY)\r\n    .replace(\"#YY#\", YY)\r\n    .replace(\"#MMMM#\", MMMM)\r\n    .replace(\"#MMM#\", MMM)\r\n    .replace(\"#MM#\", MM)\r\n    .replace(\"#M#\", M)\r\n    .replace(\"#DDDD#\", DDDD)\r\n    .replace(\"#DDD#\", DDD)\r\n    .replace(\"#DD#\", DD)\r\n    .replace(\"#D#\", D)\r\n    .replace(\"#th#\", th);\r\n  h = hhh = this.getHours();\r\n  if (h == 0) h = 24;\r\n  if (h > 12) h -= 12;\r\n  hh = h < 10 ? \"0\" + h : h;\r\n  hhhh = hhh < 10 ? \"0\" + hhh : hhh;\r\n  AMPM = (ampm = hhh < 12 ? \"am\" : \"pm\").toUpperCase();\r\n  mm = (m = this.getMinutes()) < 10 ? \"0\" + m : m;\r\n  ss = (s = this.getSeconds()) < 10 ? \"0\" + s : s;\r\n  return formatString\r\n    .replace(\"#hhhh#\", hhhh)\r\n    .replace(\"#hhh#\", hhh)\r\n    .replace(\"#hh#\", hh)\r\n    .replace(\"#h#\", h)\r\n    .replace(\"#mm#\", mm)\r\n    .replace(\"#m#\", m)\r\n    .replace(\"#ss#\", ss)\r\n    .replace(\"#s#\", s)\r\n    .replace(\"#ampm#\", ampm)\r\n    .replace(\"#AMPM#\", AMPM);\r\n};\r\n"],"names":["CargarLocalStorage","sColorPrincipal","localStorage","getItem","sColorSecundario","bLogueado","us","usuario","JSON","parse","Desencriptar","token","sToken","iMaxGuardados","GuardarMarcadores","marcadores","forEach","element","PutOpcionesUsuario","usuarioId","ObtenerMarcadores","GetOpcionesUsuario","id","then","res","ObtenerGuardadoPorId","codigo","aGuardados","find","e","codigoBaliza","ObtenerIndiceGuardado","findIndex","ActualizarDatos","console","log","GetTiempo","data","oTiempo","ActualizarCarta","Date","prototype","customFormat","formatString","YYYY","YY","MMMM","MMM","MM","M","DDDD","DDD","DD","D","hhhh","hhh","hh","h","mm","m","ss","s","ampm","AMPM","dMod","th","this","getFullYear","slice","getMonth","substring","getDate","getDay","replace","getHours","toUpperCase","getMinutes","getSeconds"],"version":3,"file":"index.b56d183f.js.map"}